2. Develop Terraform code for creating and managing Google Pub/Subtopic. Bonus points will
be there if code is reusable for multiple environments & following Terraform best practices.

Solution: Refer to the Terraform code file

Explanation:
Terraform code for creating and managing a Google Cloud Pub/Sub topic. 
The code is intended to be reusable across many contexts and follows Terraform recommended practices such as using variables, 
modules, and resource naming rules.

main.tf: This file contains the main configuration. It defines the Google Cloud provider, and specifies the project, region,
and includes the pubsub_topic module.

variables.tf: This file declares input variables that can be customized for different environments.

modules/pubsub-topic/main.tf: This is a module responsible for creating the Pub/Sub topic. 
It takes input variables like topic_name, labels, and message_encoding to create the topic. The region for 
allowed_persistence_regions is an example; you may want to customize it based on your needs.

outputs.tf: This file defines an output variable to expose the name of the created Pub/Sub topic. 
This can be useful if you want to reference the topic name in other parts of your Terraform configuration.

Make sure to replace <path-to-service-account-key-json> with the actual path to your Google Cloud service account key JSON file. 
To use this Terraform configuration, follow these steps:

Create a directory structure as follows:
.
├── main.tf
├── variables.tf
├── modules
│   └── pubsub-topic
│       ├── main.tf
├── outputs.tf

Save the provided Terraform code into the corresponding files.
Run terraform init to initialize the configuration.
Run Terraform to apply the configuration and create the Pub/Sub topic.
This structure allows you to easily extend and adapt the code for different environments by adjusting the 
variables in main.tf and variables.tf.
